{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","sortType","NONE","state","setState","list","goods","visibleGoods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,iFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAgB,WAC3B,MAA0BC,mBAAgB,CACxCC,YAAY,EACZC,SAAUL,EAASM,OAFrB,mBAAOC,EAAP,KAAcC,EAAd,KAiCMC,EAlED,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUD,EACZ,EADYA,WAENO,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKL,EAASY,SACZD,EACGE,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUE,cAAcD,MAC3D,MACF,KAAKf,EAASiB,OACZN,EAAaE,MACX,SAACC,EAAWC,GAAZ,OAA2BD,EAAUI,OAASH,EAAWG,UAW/D,OAJId,GACFO,EAAaQ,UAGRR,EA0CMS,CAAkBnB,EAAiBM,GAEhD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,EAAMF,WAAaL,EAASY,WAE5CY,QAxCe,WACrBhB,EAAS,2BACJD,GADG,IAENF,SAAUL,EAASY,aA8BjB,iCAYA,wBACEU,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYhB,EAAMF,WAAaL,EAASiB,SAE5CO,QA7Ca,WACnBhB,EAAS,2BACJD,GADG,IAENF,SAAUL,EAASiB,WAmCjB,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,EAAMH,aAEvBoB,QA3Ca,WACnBhB,EAAS,2BACJD,GADG,IAENH,YAAaG,EAAMH,eAiCjB,sBAYEG,EAAMF,UAAYE,EAAMH,aACxB,wBACEkB,KAAK,SACLD,UAAU,mBACVG,QA3DQ,WAChBhB,EAAS,CACPH,SAAUL,EAASM,KACnBF,YAAY,KAqDR,sBAUJ,6BACE,6BACGK,EAAKgB,KAAI,SAAAC,GAAI,OACZ,oBACE,UAAQ,OADV,SAIGA,GAFIA,cCrJnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.035c73f3.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods\n        .sort((firstGood, secondGood) => firstGood.localeCompare(secondGood));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort(\n        (firstGood, secondGood) => firstGood.length - secondGood.length,\n      );\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport const App: React.FC = () => {\n  const [state, setState] = useState<State>({\n    isReversed: false,\n    sortType: SortType.NONE,\n  });\n\n  const sortByAlphabet = () => {\n    setState({\n      ...state,\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  const sortByLength = () => {\n    setState({\n      ...state,\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  const sortReset = () => {\n    setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  const sortReversed = () => {\n    setState({\n      ...state,\n      isReversed: !state.isReversed,\n    });\n  };\n\n  const list = getReorderedGoods(goodsFromServer, state);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': state.sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': state.sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !state.isReversed },\n          )}\n          onClick={sortReversed}\n        >\n          Reverse\n        </button>\n\n        {(state.sortType || state.isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={sortReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {list.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}